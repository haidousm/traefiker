generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ServiceStatus {
  PULLING
  CREATED
  RUNNING
  STOPPED
  ERROR
}

model User {
  id Int @id @default(autoincrement())

  username String @unique
  hash     String
  salt     String

  createdAt DateTime @default(now())
  Service   Service?
}

model Service {
  id     Int           @id @default(autoincrement())
  name   String        @unique
  status ServiceStatus @default(PULLING)
  hosts  String[]

  image   Image @relation(fields: [imageId], references: [id])
  imageId Int

  environmentVariables EnvironmentVariable[]
  redirects            Redirect[]

  containerInfo   ContainerInfo? @relation(fields: [containerInfoId], references: [id])
  containerInfoId Int            @unique

  order     Int      @default(autoincrement())
  createdAt DateTime @default(now())

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique
}

model Image {
  id         Int    @id @default(autoincrement())
  name       String
  tag        String
  repository String

  services Service[]

  createdAt DateTime @default(now())

  @@unique([name, tag, repository], name: "imageIdentifier")
}

model ContainerInfo {
  id          Int      @id @default(autoincrement())
  name        String
  network     String
  containerId String
  service     Service?
}

model EnvironmentVariable {
  id    Int    @id @default(autoincrement())
  key   String
  value String

  service   Service @relation(fields: [serviceId], references: [id])
  serviceId Int
}

model Redirect {
  id   Int    @id @default(autoincrement())
  from String
  to   String

  service   Service @relation(fields: [serviceId], references: [id])
  serviceId Int
}
